import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# Read data
data = pd.read_csv("Dataset - Factors Influencing Technology Adoption in Consumer Households.csv")

# Assuming 'adopted_AI' is a binary column in your CSV that denotes whether an individual adopted AI (1) or not (0)
X = data.drop('adopted_AI', axis=1)
y = data['adopted_AI']

# Convert categorical data to numeric
# This step might require adjustments based on the actual columns in your CSV
X = pd.get_dummies(X, drop_first=True)

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=len(data)-50, shuffle=False)

# Train a logistic regression model
model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Print the accuracy and classification report
print(f"Accuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%")
print(classification_report(y_test, y_pred))
